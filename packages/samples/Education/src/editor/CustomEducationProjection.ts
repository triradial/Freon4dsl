// Generated by the Freon Language Generator.
import {
    FreNode,
    Box,
    FreProjection,
    FreTableDefinition,
    GridCellBox,
    HorizontalLayoutBox,
    LabelBox, SvgBox, HorizontalListBox, GridBox, createDefaultExpressionBox, BoxUtil, NumberDisplay,
    FreProjectionHandler
} from "@freon4dsl/core";
import { FractionLiteralExpression } from "../language/gen/index";

const dividerSvg: string = `M1 1 L20 1 L20 2 L1 2`;

/**
 * Class CustomEducationProjection provides an entry point for the language engineer to
 * define custom build additions to the editor.
 * These are merged with the custom build additions and other definition-based editor parts
 * in a three-way manner. For each modelelement,
 * (1) if a custom build creator/behavior is present, this is used,
 * (2) if a creator/behavior based on one of the editor definition is present, this is used,
 * (3) if neither (1) nor (2) yields a result, the default is used.
 */
export class CustomEducationProjection implements FreProjection {
    name: string = "Manual";
     handler: FreProjectionHandler;
   nodeTypeToBoxMethod: Map<string, (node: FreNode) => Box> = new Map<string, (node: FreNode) => Box>([
        ["FractionLiteralExpression", this.createFractionBox]
    ]);
    nodeTypeToTableDefinition: Map<string, () => FreTableDefinition> = new Map<string, () => FreTableDefinition>([]);

    createSvgBox(fraction: FractionLiteralExpression): Box {
        return new SvgBox(fraction, "divider", dividerSvg, {
            viewPortWidth: 5,
            viewPortHeight: 2,
            viewBoxWidth: 5,
            viewBoxHeight: 2,
            selectable: false,
            cssClass: "divider"
        });
    }

    createFractionBox(fraction: FractionLiteralExpression): Box {
        const cells: GridCellBox[] = [
            new GridCellBox(fraction, "numerator", 1, 1,
                BoxUtil.numberBox(fraction, "numerator", NumberDisplay.SELECT),
                {
                    columnSpan: 1,
                    cssClass: "mycell"
                }),
            new GridCellBox(fraction, "sum-icon-cell", 2, 1,
                new SvgBox(fraction, "sum-icon", dividerSvg, {
                    viewPortWidth: 20,
                    viewPortHeight: 2,
                    viewBoxWidth: 20,
                    viewBoxHeight: 2,
                    selectable: false,
                    cssClass: "divider"
                }),
                { cssClass: "mysvgcell" }
            ),
            new GridCellBox(fraction, "sum-to-cell", 3, 1,
                BoxUtil.numberBox(fraction, "denominator", NumberDisplay.SELECT),
                {
                    columnSpan: 1,
                    cssClass: "mycell"
                }
            )
        ];
        const result = new GridBox(fraction, "fraction-all", cells, {
            cssClass: "mygrid"
        });
        return createDefaultExpressionBox(fraction, [result]);
    }

    // TABLE_DEFINITION_FOR_CONCEPT() : FreTableDefinition { ... }
}
