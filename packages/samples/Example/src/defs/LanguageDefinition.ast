language Example

model Example {
    name: identifier;
    units: ExampleUnit[];
    rules: Rules[];
}

modelunit ExampleUnit {
    documentation: Documentation;
    name: identifier;
    entities: Entity[];
    methods: Method[];
    file-extension = "exm";
}

concept Documentation {
    text: string;
}

interface Type base BaseType {
}

concept Entity implements Type {
    abstract: boolean;
    attributes: Attribute[];
    methods: Method[];
    reference baseEntity?: Entity;
}

concept Method {
    name: identifier;
    reference declaredType : Type;
    body: Expression;
    parameters: Parameter[];
}

concept Attribute {
    reference declaredType: Type;
    name: identifier;
}

concept Parameter  {
    name: identifier;
    reference declaredType: Type;
}

////////////////////////////////////
//       Expressions
////////////////////////////////////

concept AttributeRef base AppliedFeature {
    reference attribute: Attribute;
}

expression DirectAttributeRef base Expression {
    reference attribute: Attribute;
}

expression ParameterRef base Expression {
    reference parameter: Parameter;
}

expression MethodCallExpression base Expression {
    reference methodDefinition: Method;
    args: Expression[];
}
