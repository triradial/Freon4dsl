language StudyConfigurationModel

model StudyConfigurationModel {
    configuration: StudyConfiguration;
    availability: Availability;
}

modelunit StudyConfiguration {
    name: identifier;
    showActivityDetails: boolean;
    showSystems: boolean;
    showScheduling: boolean;
    showPeriods: boolean;
    periods: Period[];
    defaultPeriod: Period;
    events: Event[];
    tasks: Task[];
    systemAccesses: SystemAccess[];
    staffing: Staffing;
}

concept Period {
    name: identifier;
    description: Description;
    date: identifier;
    events: Event[];
}

concept Staffing {
    roles: StaffRole[]; 
    assignments: Assignment[];
}

concept StaffRole {
    name: identifier;
}

concept Assignment {
    reference role: StaffRole;
    reference person: Person;
}

concept Event {
    name: identifier;
    showSequenced: boolean;
    eventNumber: number;
    checkList: CheckList;
    description: Description;
    schedule: EventSchedule;
}

concept CheckList {
    workflowNumber: number; // Only used by generator in MPS.
    activities: Task[];
}

concept Task {
    name: identifier;
    isShared: boolean;
    description: Description;
    reference referencedTask: Task;
    numberedSteps: boolean;
    showDetails: boolean;
    steps: Step[];
}

// concept ReferenceToTask base Task {}

// concept ContainedTask base Task {}

concept Step {
    title: string;
    detailsDescription: Description;
    // TODO: rename to something other than references: Reference to avoid confusion with Freon reference.
    references: Reference[];
    people: Person[];
    systems: SystemAccess[];
}

interface WorkflowDecision {
}

concept WorkflowDescription implements WorkflowDecision  {
    text: Description;
}

concept WorkflowBranch implements WorkflowDecision {
    branch: FirstScheduledExpression;
}

concept Description {
    text: string;
    rawText: string;
}

concept SystemAccess {
    name: identifier;
    description: Description;
    isShared: boolean;
    reference referencedSystemAccess: SystemAccess;
    functionName: string;
    accessedAt: AccessedAt;
    robotMappings?: RobotMapping;
}

concept SystemAccessReference {
    reference system: SystemAccess;
}

interface AccessedAt {
}


concept AccessedAtURL implements AccessedAt {
    url: string;
}

concept AccessedAPhoneNumber implements AccessedAt {
    phoneNumber: string;
}

concept Reference {
    title: string;
    link: string;
    description: Description;
}

concept RobotMapping {
    name: identifier;
    sourcePage: string;
    targetPage: string;
    closeSource: boolean;
    sourceToTargetMappings: SourceToTargetMapping[];
}

concept SourceToTargetMapping {
    sourceField : string;
    targetField : string;
}

concept Person {
    name: identifier;
    useSystemContact: boolean;
    email: string;
    phoneNumber: string;
    role: StaffRole;
}
 
