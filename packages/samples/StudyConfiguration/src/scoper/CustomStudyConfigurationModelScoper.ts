// Generated by the Freon Language Generator.
import { FreNode, FreNamedNode, FreScoper, FreScoperComposite, FreScoperBase, ownerOfType } from "@freon4dsl/core";
import { Event } from "../language/gen/index";
import { StudyConfigurationModelScoper } from "./gen/index";
/**
 * Class 'CustomStudyConfigurationModelScoper' is meant to be a convient place to add any
 * custom code for scoping.
 */
export class CustomStudyConfigurationModelScoper extends StudyConfigurationModelScoper
{
    getVisibleElements(modelelement: FreNode, metatype?: string, excludeSurrounding?: boolean): FreNamedNode[] {
        const defaultScope: FreNamedNode[] = super.getVisibleElements(modelelement, metatype, excludeSurrounding)
        const parentEvent = ownerOfType(modelelement, "Event")
        const parent = defaultScope.findIndex(node => (node as Event) === parentEvent)
        if (parent !== -1) {
            defaultScope.splice(parent, 1)
        }
        return defaultScope
    }

}
